# Defines softfloat library
project (SoftFloat )

# generate compile command database for external tools
set (CMAKE_EXPORT_COMPILE_COMMANDS "ON")

message ( STATUS "Configuring SoftFloat" )
set( C_DEFINES "-DLITTLEENDIAN -DSOFTFLOAT_ROUND_EVEN -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -DSOFTFLOAT_FAST_DIV64TO32") # -DSOFTFLOAT_FAST_INT64" )
set( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror-implicit-function-declaration -Wno-conversion ${C_DEFINES}" )
set ( softfloat_sources
   source/s_compare96M.c
   source/s_compare128M.c
   source/s_shortShiftLeft64To96M.c
   source/s_shortShiftLeftM.c
   source/s_shiftLeftM.c
   source/s_shortShiftRightM.c
   source/s_shortShiftRightJam64.c
   source/s_shortShiftRightJamM.c
   source/s_shiftRightJam32.c
   source/s_shiftRightJam64.c
   source/s_shiftRightJamM.c
   source/s_shiftRightM.c
   source/s_countLeadingZeros8.c
   source/s_countLeadingZeros16.c
   source/s_countLeadingZeros32.c
   source/s_countLeadingZeros64.c
   source/s_addM.c
   source/s_addCarryM.c
   source/s_addComplCarryM.c
   source/s_negXM.c
   source/s_sub1XM.c
   source/s_subM.c
   source/s_mul64To128M.c
   source/s_mul128MTo256M.c
   source/s_approxRecip_1Ks.c
   source/s_approxRecip32_1.c
   source/s_approxRecipSqrt_1Ks.c
   source/s_approxRecipSqrt32_1.c
   source/s_remStepMBy32.c
   source/8086-SSE/softfloat_raiseFlags.c
   source/8086-SSE/s_f16UIToCommonNaN.c
   source/8086-SSE/s_commonNaNToF16UI.c
   source/8086-SSE/s_propagateNaNF16UI.c
   source/8086-SSE/s_f32UIToCommonNaN.c
   source/8086-SSE/s_commonNaNToF32UI.c
   source/8086-SSE/s_propagateNaNF32UI.c
   source/8086-SSE/s_f64UIToCommonNaN.c
   source/8086-SSE/s_commonNaNToF64UI.c
   source/8086-SSE/s_propagateNaNF64UI.c
   source/8086-SSE/extF80M_isSignalingNaN.c
   source/8086-SSE/s_extF80MToCommonNaN.c
   source/8086-SSE/s_commonNaNToExtF80M.c
   source/8086-SSE/s_propagateNaNExtF80M.c
   source/8086-SSE/f128M_isSignalingNaN.c
   source/8086-SSE/s_f128MToCommonNaN.c
   source/8086-SSE/s_commonNaNToF128M.c
   source/8086-SSE/s_propagateNaNF128M.c
   source/s_roundToUI32.c
   source/s_roundMToUI64.c
   source/s_roundToI32.c
   source/s_roundMToI64.c
   source/s_normSubnormalF16Sig.c
   source/s_roundPackToF16.c
   source/s_normRoundPackToF16.c
   source/s_addMagsF16.c
   source/s_subMagsF16.c
   source/s_mulAddF16.c
   source/s_normSubnormalF32Sig.c
   source/s_roundPackToF32.c
   source/s_normRoundPackToF32.c
   source/s_addMagsF32.c
   source/s_subMagsF32.c
   source/s_mulAddF32.c
   source/s_normSubnormalF64Sig.c
   source/s_roundPackToF64.c
   source/s_normRoundPackToF64.c
   source/s_addMagsF64.c
   source/s_subMagsF64.c
   source/s_mulAddF64.c
   source/s_tryPropagateNaNExtF80M.c
   source/s_invalidExtF80M.c
   source/s_normExtF80SigM.c
   source/s_roundPackMToExtF80M.c
   source/s_normRoundPackMToExtF80M.c
   source/s_addExtF80M.c
   source/s_compareNonnormExtF80M.c
   source/s_isNaNF128M.c
   source/s_tryPropagateNaNF128M.c
   source/s_invalidF128M.c
   source/s_shiftNormSigF128M.c
   source/s_roundPackMToF128M.c
   source/s_normRoundPackMToF128M.c
   source/s_addF128M.c
   source/s_mulAddF128M.c
   source/softfloat_state.c
   source/ui32_to_f16.c
   source/ui32_to_f32.c
   source/ui32_to_f64.c
   source/ui32_to_extF80M.c
   source/ui32_to_f128M.c
   source/ui64_to_f16.c
   source/ui64_to_f32.c
   source/ui64_to_f64.c
   source/ui64_to_extF80M.c
   source/ui64_to_f128M.c
   source/i32_to_f16.c
   source/i32_to_f32.c
   source/i32_to_f64.c
   source/i32_to_extF80M.c
   source/i32_to_f128M.c
   source/i64_to_f16.c
   source/i64_to_f32.c
   source/i64_to_f64.c
   source/i64_to_extF80M.c
   source/i64_to_f128M.c
   source/f16_to_ui32.c
   source/f16_to_ui64.c
   source/f16_to_i32.c
   source/f16_to_i64.c
   source/f16_to_ui32_r_minMag.c
   source/f16_to_ui64_r_minMag.c
   source/f16_to_i32_r_minMag.c
   source/f16_to_i64_r_minMag.c
   source/f16_to_f32.c
   source/f16_to_f64.c
   source/f16_to_extF80M.c
   source/f16_to_f128M.c
   source/f16_roundToInt.c
   source/f16_add.c
   source/f16_sub.c
   source/f16_mul.c
   source/f16_mulAdd.c
   source/f16_div.c
   source/f16_rem.c
   source/f16_sqrt.c
   source/f16_eq.c
   source/f16_le.c
   source/f16_lt.c
   source/f16_eq_signaling.c
   source/f16_le_quiet.c
   source/f16_lt_quiet.c
   source/f16_isSignalingNaN.c
   source/f32_to_ui32.c
   source/f32_to_ui64.c
   source/f32_to_i32.c
   source/f32_to_i64.c
   source/f32_to_ui32_r_minMag.c
   source/f32_to_ui64_r_minMag.c
   source/f32_to_i32_r_minMag.c
   source/f32_to_i64_r_minMag.c
   source/f32_to_f16.c
   source/f32_to_f64.c
   source/f32_to_extF80M.c
   source/f32_to_f128M.c
   source/f32_roundToInt.c
   source/f32_add.c
   source/f32_sub.c
   source/f32_mul.c
   source/f32_mulAdd.c
   source/f32_div.c
   source/f32_rem.c
   source/f32_sqrt.c
   source/f32_eq.c
   source/f32_le.c
   source/f32_lt.c
   source/f32_eq_signaling.c
   source/f32_le_quiet.c
   source/f32_lt_quiet.c
   source/f32_isSignalingNaN.c
   source/f64_to_ui32.c
   source/f64_to_ui64.c
   source/f64_to_i32.c
   source/f64_to_i64.c
   source/f64_to_ui32_r_minMag.c
   source/f64_to_ui64_r_minMag.c
   source/f64_to_i32_r_minMag.c
   source/f64_to_i64_r_minMag.c
   source/f64_to_f16.c
   source/f64_to_f32.c
   source/f64_to_extF80M.c
   source/f64_to_f128M.c
   source/f64_roundToInt.c
   source/f64_add.c
   source/f64_sub.c
   source/f64_mul.c
   source/f64_mulAdd.c
   source/f64_div.c
   source/f64_rem.c
   source/f64_sqrt.c
   source/f64_eq.c
   source/f64_le.c
   source/f64_lt.c
   source/f64_eq_signaling.c
   source/f64_le_quiet.c
   source/f64_lt_quiet.c
   source/f64_isSignalingNaN.c
   source/extF80M_to_ui32.c
   source/extF80M_to_ui64.c
   source/extF80M_to_i32.c
   source/extF80M_to_i64.c
   source/extF80M_to_ui32_r_minMag.c
   source/extF80M_to_ui64_r_minMag.c
   source/extF80M_to_i32_r_minMag.c
   source/extF80M_to_i64_r_minMag.c
   source/extF80M_to_f16.c
   source/extF80M_to_f32.c
   source/extF80M_to_f64.c
   source/extF80M_to_f128M.c
   source/extF80M_roundToInt.c
   source/extF80M_add.c
   source/extF80M_sub.c
   source/extF80M_mul.c
   source/extF80M_div.c
   source/extF80M_rem.c
   source/extF80M_sqrt.c
   source/extF80M_eq.c
   source/extF80M_le.c
   source/extF80M_lt.c
   source/extF80M_eq_signaling.c
   source/extF80M_le_quiet.c
   source/extF80M_lt_quiet.c
   source/f128M_to_ui32.c
   source/f128M_to_ui64.c
   source/f128M_to_i32.c
   source/f128M_to_i64.c
   source/f128M_to_ui32_r_minMag.c
   source/f128M_to_ui64_r_minMag.c
   source/f128M_to_i32_r_minMag.c
   source/f128M_to_i64_r_minMag.c
   source/f128M_to_f16.c
   source/f128M_to_f32.c
   source/f128M_to_f64.c
   source/f128M_to_extF80M.c
   source/f128M_roundToInt.c
   source/f128M_add.c
   source/f128M_sub.c
   source/f128M_mul.c
   source/f128M_mulAdd.c
   source/f128M_div.c
   source/f128M_rem.c
   source/f128M_sqrt.c
   source/f128M_eq.c
   source/f128M_le.c
   source/f128M_lt.c
   source/f128M_eq_signaling.c
   source/f128M_le_quiet.c
   source/f128M_lt_quiet.c
)

file ( GLOB softfloat_headers "${CMAKE_CURRENT_SOURCE_DIR}/source/include/*.h" 
   "${CMAKE_CURRENT_SOURCE_DIR}/build/Linux-x86_64-GCC" 
   "${CMAKE_CURRENT_SOURCE_DIR}/source/8086-SSE" )
list( APPEND softfloat_sources ${softfloat_headers} )
add_library ( softfloat STATIC ${softfloat_sources} )
target_include_directories( softfloat PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/source/include" "${CMAKE_CURRENT_SOURCE_DIR}/source/8086-SSE" "${CMAKE_CURRENT_SOURCE_DIR}/build/Linux-x86_64-GCC" )

install ( TARGETS
   softfloat

   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib
)

#install ( FILES ${HEADERS} DESTINATION "include/" )
